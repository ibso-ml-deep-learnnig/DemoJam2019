apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "db.name" . }}
  labels:
    app.kubernetes.io/name: {{ include "db.name" . }}
    helm.sh/chart: {{ include "db.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.db.replicaCount }}
  serviceName: {{ .Values.service.name }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "db.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "db.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Values.db.containername }}
          image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          args: ["--default-authentication-plugin=mysql_native_password"]
          env:
          - name: MYSQL_ROOT_PASSWORD
            value: helloworld01
          ports:
          - containerPort: 3306
            name: web
          volumeMounts:
          - name: www
            mountPath: /data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
#      storageClassName: default
      resources:
        requests:
          storage: 1Gi